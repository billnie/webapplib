/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: log_logstores.proto */

#ifndef PROTOBUF_C_log_5flogstores_2eproto__INCLUDED
#define PROTOBUF_C_log_5flogstores_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SlsLogs__Log SlsLogs__Log;
typedef struct _SlsLogs__Log__Content SlsLogs__Log__Content;
typedef struct _SlsLogs__LogTag SlsLogs__LogTag;
typedef struct _SlsLogs__LogGroup SlsLogs__LogGroup;
typedef struct _SlsLogs__SlsLogPackage SlsLogs__SlsLogPackage;
typedef struct _SlsLogs__SlsLogPackageList SlsLogs__SlsLogPackageList;
typedef struct _SlsLogs__LogGroupList SlsLogs__LogGroupList;


/* --- enums --- */


/* --- messages --- */

struct  _SlsLogs__Log__Content
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define SLS_LOGS__LOG__CONTENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sls_logs__log__content__descriptor) \
    , NULL, NULL }


struct  _SlsLogs__Log
{
  ProtobufCMessage base;
  /*
   * UNIX Time Format
   */
  uint32_t time;
  size_t n_contents;
  SlsLogs__Log__Content **contents;
};
#define SLS_LOGS__LOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sls_logs__log__descriptor) \
    , 0, 0,NULL }


struct  _SlsLogs__LogTag
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define SLS_LOGS__LOG_TAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sls_logs__log_tag__descriptor) \
    , NULL, NULL }


struct  _SlsLogs__LogGroup
{
  ProtobufCMessage base;
  size_t n_logs;
  SlsLogs__Log **logs;
  char *category;
  char *topic;
  char *source;
  char *machineuuid;
  size_t n_logtags;
  SlsLogs__LogTag **logtags;
};
#define SLS_LOGS__LOG_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sls_logs__log_group__descriptor) \
    , 0,NULL, NULL, NULL, NULL, NULL, 0,NULL }


struct  _SlsLogs__SlsLogPackage
{
  ProtobufCMessage base;
  /*
   * the serialized data of LogGroup , may be compressed
   */
  ProtobufCBinaryData data;
  protobuf_c_boolean has_uncompress_size;
  int32_t uncompress_size;
};
#define SLS_LOGS__SLS_LOG_PACKAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sls_logs__sls_log_package__descriptor) \
    , {0,NULL}, 0, 0 }


struct  _SlsLogs__SlsLogPackageList
{
  ProtobufCMessage base;
  size_t n_packages;
  SlsLogs__SlsLogPackage **packages;
};
#define SLS_LOGS__SLS_LOG_PACKAGE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sls_logs__sls_log_package_list__descriptor) \
    , 0,NULL }


struct  _SlsLogs__LogGroupList
{
  ProtobufCMessage base;
  size_t n_loggrouplist;
  SlsLogs__LogGroup **loggrouplist;
};
#define SLS_LOGS__LOG_GROUP_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sls_logs__log_group_list__descriptor) \
    , 0,NULL }


/* SlsLogs__Log__Content methods */
void   sls_logs__log__content__init
                     (SlsLogs__Log__Content         *message);
/* SlsLogs__Log methods */
void   sls_logs__log__init
                     (SlsLogs__Log         *message);
size_t sls_logs__log__get_packed_size
                     (const SlsLogs__Log   *message);
size_t sls_logs__log__pack
                     (const SlsLogs__Log   *message,
                      uint8_t             *out);
size_t sls_logs__log__pack_to_buffer
                     (const SlsLogs__Log   *message,
                      ProtobufCBuffer     *buffer);
SlsLogs__Log *
       sls_logs__log__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sls_logs__log__free_unpacked
                     (SlsLogs__Log *message,
                      ProtobufCAllocator *allocator);
/* SlsLogs__LogTag methods */
void   sls_logs__log_tag__init
                     (SlsLogs__LogTag         *message);
size_t sls_logs__log_tag__get_packed_size
                     (const SlsLogs__LogTag   *message);
size_t sls_logs__log_tag__pack
                     (const SlsLogs__LogTag   *message,
                      uint8_t             *out);
size_t sls_logs__log_tag__pack_to_buffer
                     (const SlsLogs__LogTag   *message,
                      ProtobufCBuffer     *buffer);
SlsLogs__LogTag *
       sls_logs__log_tag__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sls_logs__log_tag__free_unpacked
                     (SlsLogs__LogTag *message,
                      ProtobufCAllocator *allocator);
/* SlsLogs__LogGroup methods */
void   sls_logs__log_group__init
                     (SlsLogs__LogGroup         *message);
size_t sls_logs__log_group__get_packed_size
                     (const SlsLogs__LogGroup   *message);
size_t sls_logs__log_group__pack
                     (const SlsLogs__LogGroup   *message,
                      uint8_t             *out);
size_t sls_logs__log_group__pack_to_buffer
                     (const SlsLogs__LogGroup   *message,
                      ProtobufCBuffer     *buffer);
SlsLogs__LogGroup *
       sls_logs__log_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sls_logs__log_group__free_unpacked
                     (SlsLogs__LogGroup *message,
                      ProtobufCAllocator *allocator);
/* SlsLogs__SlsLogPackage methods */
void   sls_logs__sls_log_package__init
                     (SlsLogs__SlsLogPackage         *message);
size_t sls_logs__sls_log_package__get_packed_size
                     (const SlsLogs__SlsLogPackage   *message);
size_t sls_logs__sls_log_package__pack
                     (const SlsLogs__SlsLogPackage   *message,
                      uint8_t             *out);
size_t sls_logs__sls_log_package__pack_to_buffer
                     (const SlsLogs__SlsLogPackage   *message,
                      ProtobufCBuffer     *buffer);
SlsLogs__SlsLogPackage *
       sls_logs__sls_log_package__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sls_logs__sls_log_package__free_unpacked
                     (SlsLogs__SlsLogPackage *message,
                      ProtobufCAllocator *allocator);
/* SlsLogs__SlsLogPackageList methods */
void   sls_logs__sls_log_package_list__init
                     (SlsLogs__SlsLogPackageList         *message);
size_t sls_logs__sls_log_package_list__get_packed_size
                     (const SlsLogs__SlsLogPackageList   *message);
size_t sls_logs__sls_log_package_list__pack
                     (const SlsLogs__SlsLogPackageList   *message,
                      uint8_t             *out);
size_t sls_logs__sls_log_package_list__pack_to_buffer
                     (const SlsLogs__SlsLogPackageList   *message,
                      ProtobufCBuffer     *buffer);
SlsLogs__SlsLogPackageList *
       sls_logs__sls_log_package_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sls_logs__sls_log_package_list__free_unpacked
                     (SlsLogs__SlsLogPackageList *message,
                      ProtobufCAllocator *allocator);
/* SlsLogs__LogGroupList methods */
void   sls_logs__log_group_list__init
                     (SlsLogs__LogGroupList         *message);
size_t sls_logs__log_group_list__get_packed_size
                     (const SlsLogs__LogGroupList   *message);
size_t sls_logs__log_group_list__pack
                     (const SlsLogs__LogGroupList   *message,
                      uint8_t             *out);
size_t sls_logs__log_group_list__pack_to_buffer
                     (const SlsLogs__LogGroupList   *message,
                      ProtobufCBuffer     *buffer);
SlsLogs__LogGroupList *
       sls_logs__log_group_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sls_logs__log_group_list__free_unpacked
                     (SlsLogs__LogGroupList *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SlsLogs__Log__Content_Closure)
                 (const SlsLogs__Log__Content *message,
                  void *closure_data);
typedef void (*SlsLogs__Log_Closure)
                 (const SlsLogs__Log *message,
                  void *closure_data);
typedef void (*SlsLogs__LogTag_Closure)
                 (const SlsLogs__LogTag *message,
                  void *closure_data);
typedef void (*SlsLogs__LogGroup_Closure)
                 (const SlsLogs__LogGroup *message,
                  void *closure_data);
typedef void (*SlsLogs__SlsLogPackage_Closure)
                 (const SlsLogs__SlsLogPackage *message,
                  void *closure_data);
typedef void (*SlsLogs__SlsLogPackageList_Closure)
                 (const SlsLogs__SlsLogPackageList *message,
                  void *closure_data);
typedef void (*SlsLogs__LogGroupList_Closure)
                 (const SlsLogs__LogGroupList *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sls_logs__log__descriptor;
extern const ProtobufCMessageDescriptor sls_logs__log__content__descriptor;
extern const ProtobufCMessageDescriptor sls_logs__log_tag__descriptor;
extern const ProtobufCMessageDescriptor sls_logs__log_group__descriptor;
extern const ProtobufCMessageDescriptor sls_logs__sls_log_package__descriptor;
extern const ProtobufCMessageDescriptor sls_logs__sls_log_package_list__descriptor;
extern const ProtobufCMessageDescriptor sls_logs__log_group_list__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_log_5flogstores_2eproto__INCLUDED */
